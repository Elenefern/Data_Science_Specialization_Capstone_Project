freq_3_gram <- data.table(textstat_frequency(dfm_3_gram)[,1:2]) %>% arrange(desc(frequency)) %>% filter(frequency>10) %>% mutate(proportion = frequency/sum(frequency)) %>% mutate(prior = word(feature,1,2)) %>% mutate(prediction = word(feature,-1)) %>% relocate(prior, prediction) %>% select(-feature)
saveRDS(freq_3_gram, file = "./data/freq_3_gram.rds")
remove(dfm_3_gram, freq_3_gram)
remove(list=ls())
freq_1_gram <- readRDS(file = "./data/freq_1_gram.rds")
freq_2_gram <- readRDS(file = "./data/freq_2_gram.rds")
freq_3_gram <- readRDS(file = "./data/freq_3_gram.rds")
freq_4_gram <- readRDS(file = "./data/freq_4_gram.rds")
freq_5_gram <- readRDS(file = "./data/freq_5_gram.rds")
library(RSQLite)
con <- dbConnect(SQLite(), dbname="./data/nGramdb.db")
dbListTables(con)
dbWriteTable(con, "unigram", freq_1_gram, overwrite = TRUE)
dbWriteTable(con, "bigram", freq_2_gram, overwrite = TRUE)
dbWriteTable(con, "trigram", freq_3_gram, overwrite = TRUE)
dbWriteTable(con, "quadgram", freq_4_gram, overwrite = TRUE)
dbWriteTable(con, "quingram", freq_5_gram, overwrite = TRUE)
dbDisconnect(con)
remove(freq_1_gram, freq_2_gram, freq_3_gram, freq_4_gram, freq_5_gram)
predict <- function(input_gram, dbname = "./data/nGramdb.db"){
result <- data.frame(prediction = character(), frequency=numeric(), probability=numeric())
# Clean the original sentence
replace_reg <- "[^[:alpha:][:space:]]*" # reg expresion to be replaced
clean_gram <- data_frame(text = input_gram) %>%
mutate(text = str_replace_all(text, replace_reg, "")) %>%
tolower %>% strsplit(split=" ") %>% unlist()
n <- length(clean_gram) # input gram size
max_gram_size <- 4
k <- 0.4
con <- dbConnect(SQLite(), dbname=dbname)
for (i in (max(n,max_gram_size)):1){
if (i==4){
# search quingram
search_gram <- paste(tail(clean_gram, 4), collapse=" ")
origin<-"quingram"
multiplier <- 1
sql <- paste("SELECT prediction, frequency FROM quingram WHERE ",
" prior=='", paste(search_gram), "'", sep="")}
if (i==3){
# search quadgram
search_gram <- paste(tail(clean_gram, 3), collapse=" ")
origin<-"quadgram"
multiplier <- k
sql <- paste("SELECT prediction, frequency FROM quadgram WHERE ",
" prior=='", paste(search_gram), "'", sep="")}
if (i==2){
# search trigram
search_gram <- paste(tail(clean_gram, 2), collapse=" ")
origin<-"trigram"
multiplier <- k^2
sql <- paste("SELECT prediction, frequency FROM trigram WHERE ",
" prior=='", paste(search_gram), "'", sep="")}
if (i==1){
# search bigram
search_gram <- paste(tail(clean_gram, 1), collapse=" ")
origin<-"bigram"
multiplier <- k^3
sql <- paste("SELECT prediction, frequency FROM bigram WHERE ",
" prior=='", paste(search_gram), "'", sep="")}
res <- dbSendQuery(conn=con, sql)
predictions <- dbFetch(res, n=-1)
predictions$origin <- origin
predictions$probability <- multiplier*predictions$frequency/sum(predictions$frequency)
if (nrow(predictions) > 0) {
result <- rbind(result, predictions)}
dbClearResult(res)
}
dbDisconnect(con)
if (nrow(result)==0)
{ print("could not be found")
# poner los unigrams mas probables?
} else
{ result <- result %>% arrange(desc(frequency)) }
return(result)
}
predict("hello how are")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
predict("hello how are")
predict("hello how are")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
predict("hello how are")
predict("hello how are")
predict("this has")
predict("my favourite")
predict("my favorite")
predict("my favorie")
predict("my favorite")
predict("my favoURITE")
predict("The guy in front of me just bought a pound of bacon, a bouquet, and a case of")
predict("Hey sunshine, can you follow me and make me the")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
predict("Hey sunshine, can you follow me and make me the")
predict("Very early observations on the Bills game: Offense still struggling but the")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Very early observations on the Bills game: Offense still struggling but the")
View(result)
result=="crows"
result=="crowd"
is.any(result=="crowd")==TRUE
sum(result=="crowd")==TRUE
sum(result=="internet")==TRUE
sum(result=="referees")==TRUE
sum(result=="defense")==TRUE
sum(result=="players")==TRUE
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Very early observations on the Bills game: Offense still struggling but the")
sum(result=="crowd")==TRUE
sum(result=="referees")==TRUE
sum(result=="defense")==TRUE
sum(result=="players")==TRUE
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Very early observations on the Bills game: Offense still struggling but the")
sum(result=="crowd")==TRUE
sum(result=="referees")==TRUE
sum(result=="defense")==TRUE
sum(result=="players")==TRUE
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Very early observations on the Bills game: Offense still struggling but the")
sum(result=="crowd")==TRUE
sum(result=="referees")==TRUE
sum(result=="defense")==TRUE
sum(result=="players")==TRUE
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Go on a romantic date at the")
View(result)
View(result)
result
View(result)
result<-predict("Well I'm pretty sure my granny has some old bagpipes in her garage I'll dust them off and be on my")
View(result)
result<-predict("Ohhhhh #PointBreak is on tomorrow. Love that film and haven't seen it in quite some")
View(result)
result<-predict("After the ice bucket challenge Louis will push his long wet hair out of his eyes with his little")
View(result)
sum(result==eyes)
sum(result=="eyes")
sum(result=="ears")
sum(result=="toes")
sum(result=="fingers")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("After the ice bucket challenge Louis will push his long wet hair out of his eyes with his little")
sum(result=="eyes")
sum(result=="ears")
sum(result=="toes")
sum(result=="fingers")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("After the ice bucket challenge Louis will push his long wet hair out of his eyes with his little")
sum(result=="eyes")
sum(result=="ears")
sum(result=="toes")
sum(result=="fingers")
result=="fingers"
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("After the ice bucket challenge Louis will push his long wet hair out of his eyes with his little")
sum(result=="eyes")
sum(result=="fingers")
result<-predict("Be grateful for the good times and keep the faith during the")
View(result)
sum(result=="hard")
sum(result=="worse")
sum(result=="bad")
sum(result=="sad")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Be grateful for the good times and keep the faith during the")
sum(result=="hard")
sum(result=="worse")
sum(result=="bad")
sum(result=="sad")
result=="sad"
match("hard", result)
match("bad", result)
match("sad", result)
which(result=="hard")
which(result=="bad")
result<-predict("Be grateful for the good times and keep the faith during the")
result<-predict("If this isn't the cutest thing you've ever seen, then you must be")
which(result=="insensitive")
which(result=="callous")
which(result=="insane")
which(result=="asleep")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("If this isn't the cutest thing you've ever seen, then you must be")
which(result=="insensitive")
which(result=="callous")
which(result=="insane")
which(result=="asleep")
result<-predict("When you breathe, I want to be the air for you. I'll be there for you, I'd live and I'd")
which(result=="eat")
which(result=="sleep")
which(result=="give")
which(result=="die")
result<-predict("Guy at my table's wife got up to go to the bathroom and I asked about dessert and he started telling me about his")
which(result=="horticultural")
which(result=="financial")
which(result=="marital")
which(result=="spiritual")
result<-predict("I'd give anything to see arctic monkeys this")
which(result=="morning")
which(result=="month")
which(result=="weekend")
which(result=="decade")
result<-predict("Talking to your mom has the same effect as a hug and helps reduce you")
which(result=="sleepiness")
which(result=="happiness")
which(result=="stress")
which(result=="hunger")
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
result<-predict("Talking to your mom has the same effect as a hug and helps reduce you")
which(result=="sleepiness")
which(result=="happiness")
which(result=="stress")
which(result=="hunger")
result<-predict("Talking to your mom has the same effect as a hug and helps reduce your")
which(result=="sleepiness")
which(result=="happiness")
which(result=="stress")
which(result=="hunger")
result<-predict("Question 5
When you were in Holland you were like 1 inch away from me but you hadn't time to take a")
which(result=="picture")
which(result=="hunger")
result<-predict("When you were in Holland you were like 1 inch away from me but you hadn't time to take a")
which(result=="picture")
which(result=="picture")
View(result)
which(result=="look")
which(result=="walk")
result<-predict("I'd just like all of these questions answered, a presentation of evidence, and a jury to settle the")
which(result=="account")
which(result=="matter")
which(result=="incident")
which(result=="case")
result<-predict("I can't deal with unsymetrical things. I can't even hold an uneven number of bags of groceries in each")
which(result=="finger")
)
result<-predict("I can't deal with unsymetrical things. I can't even hold an uneven number of bags of groceries in each")
which(result=="finger")
which(result=="arm")
which(result=="hand")
which(result=="toe")
result<-predict("Every inch of you is perfect from the bottom to the")
which(result=="top")
which(result=="center")
which(result=="side")
which(result=="middle)
)
which(result=="middle")
View(result)
debugSource('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/predict_function.R')
)
result<-predict("I’m thankful my childhood was filled with imagination and bruises from playing")
View(predictions)
which(result=="weekly")
which(result=="inside")
which(result=="daily")
which(result=="outside")
result<-predict("Question 10
I like how the same people are in almost all of Adam Sandler's")
result<-predict("I like how the same people are in almost all of Adam Sandler's")
result<-predict("When you breathe, I want to be the air for you. I'll be there for you, I'd live and I'd")
which(result=="eat")
which(result=="die")
which(result=="sleep")
which(result=="give")
result<-predict("Question 2
Guy at my table's wife got up to go to the bathroom and I asked about dessert and he started telling me about his")
result<-predict("Guy at my table's wife got up to go to the bathroom and I asked about dessert and he started telling me about his")
which(result=="marital")
which(result=="horticultural")
which(result=="financial")
which(result=="spiritual")
result<-predict("I'd give anything to see arctic monkeys this")
which(result=="weekend")
which(result=="decade")
which(result=="morning")
which(result=="month")
head(result,10)
result<-predict("Talking to your mom has the same effect as a hug and helps reduce your")
which(result=="hunger")
which(result=="stress")
which(result=="happiness")
which(result=="sleepiness")
result<-predict("When you were in Holland you were like 1 inch away from me but you hadn't time to take a")
which(result=="look")
which(result=="picture")
which(result=="walk")
which(result=="minute")
result<-predict("I'd just like all of these questions answered, a presentation of evidence, and a jury to settle the")
which(result=="account")
which(result=="incident")
which(result=="matter")
which(result=="case")
result<-predict("You're the reason why I smile everyday. Can you follow me please? It would mean the")
which(result=="most")
which(result=="best")
which(result=="univers")
which(result=="universe")
which(result=="world")
result<-predict("Question 3
Hey sunshine, can you follow me and make me the")
result<-predict("Hey sunshine, can you follow me and make me the")
which(result=="happiest")
which(result=="saddest")
result<-predict("[Window Title]
Synaptics TouchPad 64-bit Enhancements
[Main Instruction]
Synaptics TouchPad 64-bit Enhancements has stopped working
[Content]
Windows is checking for a solution to the problem...
[Cancel]")
result<-predict("Very early observations on the Bills game: Offense still struggling but the")
which(result=="players")
which(result=="crowd")
which(result=="defense")
which(result=="referees")
result<-predict("Go on a romantic date at the")
which(result=="movie")
which(result=="movies")
which(result=="beach")
result<-predict("Well I'm pretty sure my granny has some old bagpipes in her garage I'll dust them off and be on my")
which(result=="way")
result<-predict("Ohhhhh #PointBreak is on tomorrow. Love that film and haven't seen it in quite some")
which(result=="time")
head(result)
result<-predict("If this isn't the cutest thing you've ever seen, then you must be")
which(result=="insane")
which(result=="asleep")
result<-predict("Be grateful for the good times and keep the faith during the")
which(result=="worse")
which(result=="bad")
which(result=="sad")
which(result=="hard")
shiny::runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/test_example')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/9_Developing_Data_Products/assignment4/shiny_app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/9_Developing_Data_Products/assignment4/shiny_app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp()
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test/ngram_prediction.R')
predict_words("hello my name is", './data/nGramdb')
library(dplyr)
predict_words("hello my name is", './data/nGramdb')
library(stringr)
predict_words("hello my name is", './data/nGramdb')
library(RSQLite)
predict_words("hello my name is", './data/nGramdb')
knitr::opts_chunk$set(echo = TRUE)
setwd("C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project")
con <- dbConnect(SQLite(), dbname="./data/nGramdb.db")
dbListTables(conn = con)
predict_words("hello my name is", './data/nGramdb')
predict_words("hello my name", './data/nGramdb')
predict_words("hello my", './data/nGramdb')
predict_words("hello my", './data/nGramdb.db')
predict_words("hello my", "./data/nGramdb.db")
debugSource('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test/ngram_prediction.R')
predict_words("hello my", "./data/nGramdb.db")
predict_words("hello my", "./data/nGramdb.db")
dbListTables(conn=con)
predict_words("hello my", "./data/nGramdb.db")
debugSource('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test/ngram_prediction.R')
predict_words("hello my", "./data/nGramdb.db")
dbListTables(conn = conn)
dbListTables(conn = con)
dbListTables(con)
con <- dbConnect(SQLite(), dbname="./data/nGramdb.db")
dbListTables(con)
con <- dbConnect(SQLite(), dbname="('C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project/data/nGramdb.db")
con <- dbConnect(SQLite(), dbname="('C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
con <- dbConnect(SQLite(), dbname="("C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
con <- dbConnect(SQLite(), dbname=("C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
)
dbListTables(con)
rm(list=ls())
predict_words("hello my", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
debugSource('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test/ngram_prediction.R')
predict_words("hello my", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
# search quadgram
search_gram <- paste(tail(clean_gram, 3), collapse=" ")
predict_words("hello my", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
dbListTables(con)
# Change tabs on "Start"
observeEvent(input$onStart, {
updateNavbarPage(session, "navBar",
selected = "Predictor")
})
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
predict_words("hello my", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
predict_words("hello my", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
res<-predict_words("hello my", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\data\\nGramdb.db")
res[1]
res[1,1]
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
class(mtcars)
data.frame(j)
data.frame("kjasdhf")
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
class(iris)
iris
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
data.frame([1,2])
[1,2,3]
data.frame(1,2,3)
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/test_example')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp()
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
initial_test<-data.frame(1,2,3)
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test/ngram_prediction.R')
predict_words("hello my name", "C:\Users\efernnde\MyWorkspace\Coursera_Data_Science\10_Data_Science_Project\app_2\app_test\data\nGramdb.db" )
predict_words("hello my name", "C:\Users\efernnde\MyWorkspace\Coursera_Data_Science\10_Data_Science_Project\app_2\app_test\data\nGramdb.db" )
predict_words("hello my name", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\app_2\\app_test\\data\\nGramdb.db" )
res<-predict_words("hello my name", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\app_2\\app_test\\data\\nGramdb.db" )
distinct(res)
res %>% select(-frequency, -origin)
res %>% select(-frequency, -origin) %>% distinct(prediction)
distinct_df = res %>% distinct(prediction)
distinct_df
unique(res$prediction)
split(seq_along(res), res)
res
res %>% group_by(prediction)
aux<-res %>% group_by(prediction)
aux
View(aux)
View(aux)
res %>% distinct(prediction, .keep_all= TRUE)
res
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
source('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test/ngram_prediction.R')
res<-predict_words("hello my name", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\app_2\\app_test\\data\\nGramdb.db" )
res
res<-predict_words("hello my name", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\app_2\\app_test\\data\\nGramdb.db" )
res<-predict_words("hola", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\app_2\\app_test\\data\\nGramdb.db" )
length(res)
dim(res)
res
res<-predict_words("hello", "C:\\Users\\efernnde\\MyWorkspace\\Coursera_Data_Science\\10_Data_Science_Project\\app_2\\app_test\\data\\nGramdb.db" )
dim(res)
dim(res)[1]
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/test_example')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
shiny::runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
con <- dbConnect(SQLite(), dbname='.\\Data\\nGramdb.db')
sql <- paste("SELECT top 20 prediction, frequency FROM unigram")
res <- dbSendQuery(conn=con, sql)
sql <- paste("SELECT TOP 20 prediction, frequency FROM unigram")
res <- dbSendQuery(conn=con, sql)
sql <- paste("SELECT TOP 20 * prediction, frequency FROM unigram")
res <- dbSendQuery(conn=con, sql)
sql <- paste("SELECT prediction, frequency FROM unigram LIMIT 20")
res <- dbSendQuery(conn=con, sql)
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/10_Data_Science_Project/app_2/app_test')
remove(list=ls())
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
install.packages("markdown")
shiny::runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp()
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
detach("package:shiny", unload = TRUE)
library(shiny)
shiny::runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
runApp('C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app')
getwd()
setwd("C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app")
runApp()
runApp()
runApp()
runApp()
setwd("C:/Users/efernnde/MyWorkspace/Coursera_Data_Science/Capstone_Project_GitHub/Data_Science_Specialization_Capstone_Project/app")
getwd()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
